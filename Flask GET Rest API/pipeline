pipeline {
    agent any
    environment {
        EC2_HOST = '51.20.89.145'
        EC2_USER = 'ec2-user'
        PRIVATE_KEY_CREDENTIAL_ID = 'pemkey1' // Replace with the actual credential ID
    }
    stages {
        stage('Build') {
            steps {
                dir('Flask GET Rest API') {
                    sh 'ls'
                    sh 'docker build -t flask -f Dockerfile .'
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                sh "docker login -u deekshatadikamalla@gmail.com -p 'Deeksha@2000>>'"
                sh 'docker tag flask deekshat13/tdeeksha:flask'
                sh "docker push deekshat13/tdeeksha:flask"
            }
        }

        stage('Pull Docker Image on EC2') {
            steps {
                script {
                    // Use the credentials binding to retrieve the private key content
                    def privateKeyContent = credentials("${PRIVATE_KEY_CREDENTIAL_ID}")

                    // Create a temporary file and write the private key content to it
                    def privateKeyFile = file("/tmp/private-key.pem")
                    privateKeyFile.write(privateKeyContent)

                    // Use the temporary private key file for SSH
                    sh """
                        ssh -i /tmp/private-key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $EC2_USER@$EC2_HOST << EOF
                        docker pull deekshat13/tdeeksha:flask
                        EOF
                    """
                }
            }
        }
    }
}
